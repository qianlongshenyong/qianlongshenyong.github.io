{"meta":{"title":"潜龙慎用","subtitle":null,"description":null,"author":"peter","url":"https://qianlongshenyong.github.io","root":"/"},"pages":[{"title":"","date":"2019-06-23T06:18:06.762Z","updated":"2019-06-23T06:18:06.762Z","comments":true,"path":"about/index.html","permalink":"https://qianlongshenyong.github.io/about/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"","date":"2019-06-23T06:17:31.937Z","updated":"2019-06-23T06:17:31.937Z","comments":false,"path":"tags/index.html","permalink":"https://qianlongshenyong.github.io/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"","date":"2019-06-23T06:17:50.555Z","updated":"2019-06-23T06:17:50.555Z","comments":false,"path":"categories/index.html","permalink":"https://qianlongshenyong.github.io/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"搭建自己的博客","slug":"搭建自己的博客","date":"2019-06-22T16:00:00.000Z","updated":"2019-06-23T07:57:45.110Z","comments":true,"path":"2019/06/23/搭建自己的博客/","link":"","permalink":"https://qianlongshenyong.github.io/2019/06/23/搭建自己的博客/","excerpt":"搭建自己的博客技术：Hexo+github 步骤： 注册一个github账号，登录后新创建一个仓库 填写仓库的名称和描述，注意仓库的名称的格式：用户名.github.io 点击Settings设置，然后往下拉，找到github pages，点击choose a theme选择喜欢主题 在浏览器输入 用户名.github.io访问自己博客","text":"搭建自己的博客技术：Hexo+github 步骤： 注册一个github账号，登录后新创建一个仓库 填写仓库的名称和描述，注意仓库的名称的格式：用户名.github.io 点击Settings设置，然后往下拉，找到github pages，点击choose a theme选择喜欢主题 在浏览器输入 用户名.github.io访问自己博客 hexo环境搭建： 安装git 安装nodejs 创建存放hexo组件的目录，然后Git bash here 安装hexo npm install hexo -g hexo -v，检查hexo是否安装成功 初始化文件夹 hexo init npm install 安装所需要的组件 将Hexo于Github page 联系起来，设置Git的user name 和email git config --global user.name \"qianlongshenyong\" git config --global user.email\"1320005085@qq.com\" 修改 D:\\blog\\_config.yml 并保存 修改 hexo s在本地4000端口开启服务 在浏览器输入127.0.0.1:4000访问博客主页 使用Hexo修改博客主题 选择博客主题https://hexo.io/themes/ 选择tomotoes主题 复制主题链接， D:\\blog\\themes,右键选择git bash here 下载所选主题git clone https://github.com/Tomotoes/hexo-theme-tomotoes.git 修改主题名称为tomotoes 修改 D:\\blog\\_config.yml 中theme并保存 然后在blog目录下打开git输入hexo s，本地预览效果. 修改主题配置按照https://github.com/Tomotoes/hexo-theme-tomotoes.git有部署文档 依赖安装还是在 Hexo 根目录，如果以下插件已安装过，无需再次安装。 Less主题默认使用 less 作为 css 预处理工具。 1$ npm install hexo-renderer-less --save Feed用于生成 rss。 1$ npm install hexo-generator-feed --save Json-content用于生成静态站点数据，用作站内搜索的数据源。 1$ npm install hexo-generator-json-content --save QRCode用于生成微信分享二维码。 1$ npm install hexo-helper-qrcode --save hexo-wordcount用来显示文章更多信息，比如：字数，阅读时间 1npm install hexo-wordcount --save hexo-abbrlink文章唯一链接，有利于SEO，主题脚本也对其有依赖 1npm install hexo-abbrlink --save hexo-filter-github-emojisEmoji插件，让文章更生动 1npm install hexo-filter-github-emojis --save 安装完成后再次运行hexo s 开启页面标签页1hexo new page tags 修改 hexo/source/tags/index.md 的元数据 12layout: tagscomments: false 分类页1hexo new page categories 修改 hexo/source/categories/index.md 的元数据 12layout: categoriescomments: false 关于页1hexo new page about 修改 hexo/source/about/index.md 的元数据 123layout: aboutcomments: truereward: false 根据需求修改主题的配置 修改 `D:\\blog_config.yml 1234567title: subtitle:description:keywords:author: peteremial: 1320005085@qq.comurl: 保存预览 npm install –save hexo-deployer-git hexo d –g 文件开头 123456789---title: xxxtags: xxxcategories: xxxdescription: xxxdate: 2018/7/12 22:00:00---注:冒号后面必须要有空格 这是yaml语法的规定 参数列表 其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。 菜单栏 其中，About这个你是找不到网页的，因为你的文章中没有about这个东西。如果你想要的话，可以执行命令 hexo new page about 它就会在根目录下source文件夹中新建了一个about文件夹，以及index.md，在index.md中写上你想要写的东西，就可以在网站上展示出来了。 图片的位置： 如何让博文列表不显示全部内容默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？ 答案是在合适的位置加上即可，例如： 参考：https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#hexo%E7%AE%80%E4%BB%8B https://blog.csdn.net/sinat_37781304/article/details/82729029 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"工具","slug":"工具","permalink":"https://qianlongshenyong.github.io/categories/工具/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://qianlongshenyong.github.io/tags/工具/"}]}]}