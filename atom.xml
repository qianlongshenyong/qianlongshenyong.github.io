<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>潜龙慎用</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qianlongshenyong.github.io/"/>
  <updated>2019-07-07T09:25:58.880Z</updated>
  <id>https://qianlongshenyong.github.io/</id>
  
  <author>
    <name>潜龙慎用</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端之HTML</title>
    <link href="https://qianlongshenyong.github.io/2019/07/07/%E5%89%8D%E7%AB%AF%E4%B9%8BHTML/"/>
    <id>https://qianlongshenyong.github.io/2019/07/07/前端之HTML/</id>
    <published>2019-07-07T08:38:17.000Z</published>
    <updated>2019-07-07T09:25:58.880Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-HTML概述"><a href="#1-HTML概述" class="headerlink" title="1 HTML概述"></a>1 HTML概述</h1><ul><li>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)</li><li>HTML 不是一种编程语言，而是一种<strong>标记语言</strong> (markup language)</li><li>标记语言是一套<strong>标记标签</strong> (markup tag)</li><li>HTML 使用<strong>标记标签</strong>来描述网页</li><li>HTML是一个标准,规定了大家怎么写网页.</li><li><strong>HTML基本概念</strong></li></ul><h2 id="1-1标签"><a href="#1-1标签" class="headerlink" title="1.1标签"></a>1.1标签</h2><ul><li><p>HTML 标签是由尖括号包围的关键词，比如 </p></li><li><p>HTML 标签通常是成对出现的，标签对中的第一个标签是开始标签，第二个标签是结束标签</p><p><img src="/2019/07/07/前端之HTML/HTML%E6%A0%87%E7%AD%BE.jpg" alt="HTML标签"></p></li><li><p>标签与标签之间是可以嵌套的，但先后顺序必须保持一致，如：</p><div>里嵌套<p>，那么</p>必须放在</div>的前面。<p></p></li></ul><h2 id="1-2元素"><a href="#1-2元素" class="headerlink" title="1.2元素"></a>1.2元素</h2><p>HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。</p><h3 id="1-2-1-嵌套的-HTML-元素"><a href="#1-2-1-嵌套的-HTML-元素" class="headerlink" title="1.2.1 嵌套的 HTML 元素"></a>1.2.1 嵌套的 HTML 元素</h3><p>大多数 HTML 元素可以嵌套（可以包含其他 HTML 元素）。</p><p>HTML 文档由嵌套的 HTML 元素构成。</p><h3 id="1-2-2-html元素"><a href="#1-2-2-html元素" class="headerlink" title="1.2 .2 html元素"></a>1.2 .2 html元素</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><html></span><br><span class="line"><head></span><br><span class="line">    <meta charset="UTF-8"></span><br><span class="line">    <title>Title</title></span><br><span class="line"></head></span><br><span class="line"><body></span><br><span class="line"><p>This is my first paragraph.</p></span><br><span class="line"></body></span><br><span class="line"></span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure>是说明这个是一个网页。告诉浏览器这个网页的开始和结束。他包含了之后的两个元素。<meta name="generator" content="Hexo 3.9.0">和|和 元素定义了整个 HTML 文档。<p>这个元素拥有一个开始标签 ，以及一个结束标签 。</p><p>元素内容是另一个 HTML 元素（body 元素）和（head 元素）</p><h3 id="1-2-3-head-元素："><a href="#1-2-3-head-元素：" class="headerlink" title="1.2.3  head 元素："></a>1.2.3 <meta name="generator" content="Hexo 3.9.0"> head 元素：</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><head></span><br><span class="line">    <meta charset="UTF-8"></span><br><span class="line">    <title>Title</title></span><br><span class="line"></head></span><br></pre></td></tr></tbody></table></figure><p>head>和之间的内容，是元信息和网站的标题 元信息一般是不显示出来的,但是记录了你这个HTML文件的很多有用的信息</p><h3 id="1-2-4-body元素："><a href="#1-2-4-body元素：" class="headerlink" title="1.2.4  body元素："></a>1.2.4  body元素：</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><body></span><br><span class="line"><p>This is my first paragraph.</p></span><br><span class="line"></body></span><br></pre></td></tr></tbody></table></figure>和<script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"model":{"jsonPath":"live2d-widget-model-miku"},"display":{"position":"right","width":140,"height":260},"mobile":{"show":true},"log":false,"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/","tagMode":false});</script>之间的内容，是浏览器呈现出来的，用户看到的页面效果。也就是说这里是网页的主体。也就是body的身体之意<h3 id="1-2-5-段落-元素"><a href="#1-2-5-段落-元素" class="headerlink" title="1.2.5 段落 元素"></a>1.2.5 <p>段落 元素</p></h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><p>This is my first paragraph.</p></span><br></pre></td></tr></tbody></table></figure><p>这个 </p><p> 元素定义了 HTML 文档中的一个段落。</p><p>这个元素拥有一个开始标签 </p><p>，以及一个结束标签 </p>。<p></p><p>元素内容是：This is my first paragraph。</p><h3 id="1-2-6-空的-HTML-元素"><a href="#1-2-6-空的-HTML-元素" class="headerlink" title="1.2.6  空的 HTML 元素"></a>1.2.6  空的 HTML 元素</h3><p>没有内容的 HTML 元素被称为空元素。空元素是在开始标签中关闭的。</p><p><br> 就是没有关闭标签的空元素.</p><h2 id="1-3属性"><a href="#1-3属性" class="headerlink" title="1.3属性"></a>1.3属性</h2><p>HTML 标签可以拥有<em>属性</em>。属性提供了有关 HTML 元素的<em>更多的信息</em>。</p><p>属性总是以名称/值对的形式出现，比如：<em>name=”value”</em>。</p><p>属性总是在 HTML 元素的<em>开始标签</em>中规定</p><p>HTML 提示：使用小写标签</p><p>HTML 标签对大小写不敏感：</p><p> 等同于 </p><p>。许多网站都使用大写的 HTML 标签。</p><p><strong>几个重要的属性：</strong></p><ul><li>id：定义标签的唯一ID，HTML文档树中唯一</li><li>class：为html元素定义一个或多个类名（classname）(CSS样式类名)</li><li>style：规定元素的行内样式（CSS样式）</li></ul><h1 id="2-HTML-文档-网页"><a href="#2-HTML-文档-网页" class="headerlink" title="2 HTML 文档 = 网页"></a>2 HTML 文档 = 网页</h1><ul><li>HTML 文档<em>描述网页</em></li><li>HTML 文档<em>包含 HTML 标签</em>和纯文本</li><li>HTML 文档也被称为<em>网页</em></li></ul><p>Web 浏览器的作用是读取 HTML 文档，并以网页的形式显示出它们。浏览器不会显示 HTML 标签，而是使用标签来解释页面的内容：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">html</span>></span></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">h1</span>></span>我的第一个标题<span class="tag"></<span class="name">h1</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">p</span>></span>我的第一个段落。<span class="tag"></<span class="name">p</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"></<span class="name">html</span>></span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">解释：</span><br><span class="line"><html> 与 </html> 之间的文本描述网页</span><br><span class="line"><body> 与 </body> 之间的文本是可见的页面内容</span><br><span class="line"><h1> 与 </h1> 之间的文本被显示为标题</span><br><span class="line"><p> 与 </p> 之间的文本被显示为段落</span><br></pre></td></tr></tbody></table></figure><p>==<strong>学HTML主要是学标签</strong>==</p><h1 id="3-HTML-标签分类"><a href="#3-HTML-标签分类" class="headerlink" title="3 HTML 标签分类"></a>3 HTML 标签分类</h1><p>标签可以理解为<标签名></p><p>标签的分类：</p><ol><li><p>单标签和双标签</p></li><li><p>块级标签和内联标签</p><p>块级标签：默认占浏览器长度，可以设置长和宽 <code>h1~h6  div  p  hr（水平线）</code></p><p>内联标签：根据内容决定长度，不能设置长和宽 <code>a img  u s b span i</code> </p><p>块级元素与行内元素的区别：<br>所谓块元素，是以另起一行开始渲染的元素，行内元素则不需另起一行。如果单独在网页中插入这两个元素，不会对页面产生任何的影响。<br>这两个元素是专门为定义CSS样式而生的。</p></li><li><p>展示标签和交互标签</p></li><li><p>标签的语法：</p><ul><li><标签名 属性1=“属性值1” 属性2=“属性值2”……>内容部分</标签名></li><li><标签名 属性1=“属性值1” 属性2=“属性值2”…… /></li></ul></li></ol><h1 id="4-HTML文件结构："><a href="#4-HTML文件结构：" class="headerlink" title="4 HTML文件结构："></a>4 HTML文件结构：</h1><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><!DOCTYPE html></span></span><br><span class="line"><span class="tag"><<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>Title<span class="tag"></<span class="name">title</span>></span></span><br><span class="line"><span class="tag"></<span class="name">head</span>></span></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"></<span class="name">html</span>></span></span><br></pre></td></tr></tbody></table></figure><p>注：使用pycharm创建一个html文件，会自动补全</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><!DOCTYPE html>声明为HTML5文档。</span><br><span class="line"><html lang="en">搜索引擎表示该页面是html语言，lang是language的缩写</span><br><span class="line"><html>、</html>是文档的开始标记和结束的标记。是HTML页面的根元素，在它们之间是文档的头部（head）和主体（body）。</span><br><span class="line"><head>、</head>定义了HTML文档的开头部分。它们之间的内容不会在浏览器的文档窗口显示。包含了文档的元（meta）数据。</span><br><span class="line"><title>、</title>定义了网页标题，在浏览器标题栏显示。</span><br><span class="line"><body>、</body>之间的文本是可见的网页主体内容。</span><br><span class="line">注意：对于中文网页需要使用 <meta charset="utf-8"> 声明编码，否则会出现乱码。有些浏览器会设置 GBK 为默认编码，则你需要设置为 <meta charset="gbk">。</span><br></pre></td></tr></tbody></table></figure><p>一个简单的 HTML 文档，带有最基本的必需的元素：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">html 标签 <span class="tag"><<span class="name">html</span>></span> <span class="tag"></<span class="name">html</span>></span></span><br><span class="line">head 标签 <span class="tag"><<span class="name">head</span>></span> <span class="tag"></<span class="name">head</span>></span> 其中，在head标签中，必须要有title标签 <span class="tag"><<span class="name">title</span>></span> <span class="tag"></<span class="name">title</span>></span></span><br><span class="line">body 标签 <span class="tag"><<span class="name">body</span>></span> <span class="tag"></<span class="name">body</span>></span></span><br></pre></td></tr></tbody></table></figure><h1 id="5-HTML-常用标签"><a href="#5-HTML-常用标签" class="headerlink" title="5 HTML 常用标签"></a>5 HTML 常用标签</h1><h2 id="5-1-HTML注释"><a href="#5-1-HTML注释" class="headerlink" title="5.1 HTML注释"></a>5.1 HTML注释</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><!--注释内容--></span><br></pre></td></tr></tbody></table></figure><h2 id="5-2-lt-DOCTYPE-gt-标签"><a href="#5-2-lt-DOCTYPE-gt-标签" class="headerlink" title="5.2 <!DOCTYPE> 标签"></a>5.2 <!DOCTYPE> 标签</h2><p><code><!DOCTYPE> 声明必须是 HTML 文档的第一行，位于 <html> 标签之前。</code></p><p><code><!DOCTYPE> 声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。</code></p><p>doctype告诉浏览器使用什么样的html或xhtml规范来解析html文档</p><p>HTML语言需要一个标准，当我们在第一行指定了的时候，当浏览器去访问我们的代码的时候就就按照HTML代码里指定的标准去读取和渲染给我们展现的页面。 </p><h2 id="5-3-头部标签-lt-head-gt"><a href="#5-3-头部标签-lt-head-gt" class="headerlink" title="5.3 头部标签 <head>"></a>5.3 头部标签 <code><head></code></h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><head> 标签用于定义文档的头部，它是所有头部元素的容器。文档的头部描述了文档的各种属性和信息，包括文档的标题、在 Web 中的位置以及和其他文档的关系等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。</span><br></pre></td></tr></tbody></table></figure><p>下面这些标签可用在 head 部分:</p><table><thead><tr><th>标签</th><th>意义</th></tr></thead><tbody><tr><td><title></title></td><td>定义网页标题</td></tr><tr><td><style></style></td><td>定义内部样式表</td></tr><tr><td><script></script></td><td>定义JS代码或引入外部JS文件</td></tr><tr><td><link></td><td>引入外部样式表文件</td></tr><tr><td><meta></td><td>定义网页原信息(给浏览器看的)</td></tr></tbody></table><p>注：</p><ol><li>单标签：==/==可以加也可以不加</li><li><code><title> 定义文档的标题，它是 head 部分中唯一必需的元素。</code></li><li>chrom浏览器 查看网页的三种方法：<ol><li>鼠标右键 查看网页源码</li><li>快捷键<code>ctrl+u</code></li><li><code>F12</code></li></ol></li></ol><h3 id="5-3-1-Meta标签"><a href="#5-3-1-Meta标签" class="headerlink" title="5.3.1 Meta标签"></a>5.3.1 Meta标签</h3><p>Meta标签介绍：提供有关页面的元信息，例：页面编码、刷新、跳转、针对搜索引擎和更新频度的描述和关键词</p><p>‘<meta>‘元素可提供有关页面的元信息（mata-information）,针对搜索引擎和更新频度的描述和关键词。</p><p>‘<meta>‘标签位于文档的头部，不包含任何内容。</p><p>‘<meta>‘提供的信息是用户不可见的。</p><p>meta标签的组成：meta标签共有两个属性，它们分别是http-equiv属性和name 属性，不同的属性又有不同的参数值，这些不同的参数值就实现了不同的网页功能。 </p><ol><li>http-equiv属性：相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确地显示网页内容，与之对应的属性值为content，content中的内容其实就是各个参数的变量值。</li></ol><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><!--2秒后跳转到对应的网址，注意引号--></span></span><br><span class="line"><span class="tag"><<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"2;URL=https://www.oldboyedu.com"</span>></span></span><br><span class="line"><span class="comment"><!--指定文档的编码类型--></span></span><br><span class="line"><span class="tag"><<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-Type"</span> <span class="attr">charset</span>=<span class="string">UTF8</span>"></span></span><br><span class="line"><span class="comment"><!--告诉IE以最高级模式渲染文档--></span></span><br><span class="line"><span class="tag"><<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"x-ua-compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>></span></span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>name属性: 主要用于描述网页，与之对应的属性值为content，content中的内容主要是便于搜索引擎机器人查找信息和分类信息用的。</li></ol><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"淘宝网 - 亚洲较大的网上交易平台，提供各类服饰、美容、家居、数码、话费/点卡充值… 数亿优质商品，同时提供担保交易(先收货后付款)等安全交易保障服务，并由商家提供退货承诺、破损补寄等消费者保障服务，让你安心享受网上购物乐趣！"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keyword"</span> <span class="attr">content</span>=<span class="string">"淘宝,掏宝,网上购物,C2C,在线交易,交易市场,网上交易,交易市场,网上买,网上卖,购物网站,团购,网上贸易,安全购物,电子商务,放心买,供应,买卖信息,网店,一口价,拍卖,网上开店,网络购物,打折,免费开店,网购,频道,店铺"</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-3-2-title标签"><a href="#5-3-2-title标签" class="headerlink" title="5.3.2 title标签"></a>5.3.2 title标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">title</span>></span> 元素可定义文档的标题</span><br></pre></td></tr></tbody></table></figure><p><img src="/2019/07/07/前端之HTML/831021-20160128004414707-1790664709.png" alt="img"></p><h3 id="5-3-3-link-标签"><a href="#5-3-3-link-标签" class="headerlink" title="5.3.3 link 标签"></a>5.3.3 link 标签</h3><p>网页头部的图标</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><link rel="shortcut icon" href="favicon.ico"></span><br></pre></td></tr></tbody></table></figure><p>效果图如下</p><p><img src="/2019/07/07/前端之HTML/831021-20160128062900988-738903477.png" alt="img"></p><p>导入CSS类似python中导入模块类似</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><link rel="stylesheet" href="css/css_model.css"></span><br></pre></td></tr></tbody></table></figure><h3 id="5-3-4-Style"><a href="#5-3-4-Style" class="headerlink" title="5.3.4 Style"></a>5.3.4 Style</h3><p>1、在当前文件中写Css样式</p><p>2、在其他文件中写Css样式类似python的模块导入的方式把Css样式导入到当前文件中使用</p><h3 id="5-3-5-Script"><a href="#5-3-5-Script" class="headerlink" title="5.3.5 Script"></a>5.3.5 Script</h3><p>1、在当前文件中写JS</p><p>2、在其他文件中写JS类似python的模块导入的方式把JS导入到当前文件中使用</p><h2 id="5-4-body标签"><a href="#5-4-body标签" class="headerlink" title="5.4 body标签"></a>5.4 body标签</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><body></span><br><span class="line"></span><br><span class="line"></body></span><br></pre></td></tr></tbody></table></figure><p>body 元素定义文档的主体。</p><p>body 元素包含文档的所有内容（比如文本、超链接、图像、表格和列表等等。）</p><p>body里面分为两类标签：块级标签和内联标签，块级标签占用的是整行，内联标签占用的他所使用的实际大小如下图：块级别标签&内联标签 </p><p><img src="/2019/07/07/前端之HTML/831021-20160128065154582-960760506.png" alt="img"></p><p>下面这些标签常用在body标签中：</p><h3 id="5-4-1-标题标签"><a href="#5-4-1-标题标签" class="headerlink" title="5.4.1 标题标签"></a>5.4.1 标题标签</h3><p>HTML 标题（Heading）是通过 </p><h1> - </h1><h6> 等标签进行定义的<p></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">h1</span>></span>标题1<span class="tag"></<span class="name">h1</span>></span></span><br><span class="line"><span class="tag"><<span class="name">h2</span>></span>标题2<span class="tag"></<span class="name">h2</span>></span></span><br><span class="line"><span class="tag"><<span class="name">h3</span>></span>标题3<span class="tag"></<span class="name">h3</span>></span></span><br><span class="line"><span class="tag"><<span class="name">h4</span>></span>标题4<span class="tag"></<span class="name">h4</span>></span></span><br><span class="line"><span class="tag"><<span class="name">h5</span>></span>标题5<span class="tag"></<span class="name">h5</span>></span></span><br><span class="line"><span class="tag"><<span class="name">h6</span>></span>标题6<span class="tag"></<span class="name">h6</span>></span></span><br></pre></td></tr></tbody></table></figure></h6><h3 id="5-4-2-段落标签"><a href="#5-4-2-段落标签" class="headerlink" title="5.4.2 段落标签"></a>5.4.2 段落标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">p</span>></span>段落标签<span class="tag"></<span class="name">p</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-3-表格标签"><a href="#5-4-3-表格标签" class="headerlink" title="5.4.3 表格标签"></a>5.4.3 表格标签</h3><p> 格是一个二维数据空间，一个表格由若干行组成，一个行又有若干单元格组成，单元格里可以包含文字、列表、图案、表单、数字符号、预置文本和其它的表格等内容。<br>表格最重要的目的是显示表格类数据。表格类数据是指最适合组织为表格格式（即按行和列组织）的数据。<br>表格的基本结构：包括thead 和tbody</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">table</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">thead</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">tr</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">th</span>></span>序号<span class="tag"></<span class="name">th</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">th</span>></span>姓名<span class="tag"></<span class="name">th</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">th</span>></span>爱好<span class="tag"></<span class="name">th</span>></span></span><br><span class="line">  <span class="tag"></<span class="name">tr</span>></span></span><br><span class="line">  <span class="tag"></<span class="name">thead</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">tbody</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">tr</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">td</span>></span>1<span class="tag"></<span class="name">td</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">td</span>></span>Egon<span class="tag"></<span class="name">td</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">td</span>></span>蓝球<span class="tag"></<span class="name">td</span>></span></span><br><span class="line">  <span class="tag"></<span class="name">tr</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">tr</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">td</span>></span>2<span class="tag"></<span class="name">td</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">td</span>></span>Yuan<span class="tag"></<span class="name">td</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">td</span>></span>足球<span class="tag"></<span class="name">td</span>></span></span><br><span class="line">  <span class="tag"></<span class="name">tr</span>></span></span><br><span class="line">  <span class="tag"></<span class="name">tbody</span>></span></span><br><span class="line"><span class="tag"></<span class="name">table</span>></span></span><br></pre></td></tr></tbody></table></figure><p>属性:</p><ul><li>border: 表格边框.</li><li>cellpadding: 内边距</li><li>cellspacing: 外边距.</li><li>width: 像素 百分比.（最好通过css来设置长宽）</li><li>rowspan: 单元格竖跨多少行</li><li>colspan: 单元格横跨多少列（即合并单元格</li></ul><h3 id="5-4-4-换行标签"><a href="#5-4-4-换行标签" class="headerlink" title="5.4.4 换行标签"></a>5.4.4 换行标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">br</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-5-div标签"><a href="#5-4-5-div标签" class="headerlink" title="5.4.5 div标签"></a>5.4.5 div标签</h3><p>div标签用来定义一个块级元素，并无实际的意义。主要通过CSS样式为其赋予不同的表现。</p><h3 id="5-4-6-span标签"><a href="#5-4-6-span标签" class="headerlink" title="5.4.6 span标签"></a>5.4.6 span标签</h3><p>span标签用来定义内联(行内)元素，并无实际的意义。主要通过CSS样式为其赋予不同的表现。</p><h3 id="5-4-7-链接-a-标签"><a href="#5-4-7-链接-a-标签" class="headerlink" title="5.4.7 链接(a)标签"></a>5.4.7 链接(a)标签</h3><p>超链接标签</p><p>所谓的超链接是指从一个网页指向一个目标的连接关系，这个目标可以是另一个网页，也可以是相同网页上的不同位置，还可以是一个图片，一个电子邮件地址，一个文件，甚至是一个应用程序。</p><p><code>target="_blank"</code>在另一个标签页打开一个新的，不加的话，<code>target="_self"</code>在当前标签页，默认跳转到另一个。</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"://www.oldboyedu.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> ></span>点我<span class="tag"></<span class="name">a</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-8-图像-img-标签"><a href="#5-4-8-图像-img-标签" class="headerlink" title="5.4.8 图像(img)标签"></a>5.4.8 图像(img)标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片的路径"</span> <span class="attr">alt</span>=<span class="string">"图片未加载成功时的提示"</span> <span class="attr">title</span>=<span class="string">"鼠标悬浮时提示信息"</span> <span class="attr">width</span>=<span class="string">"宽"</span> <span class="attr">height</span>=<span class="string">"高(宽高两个属性只用一个会自动等比缩放)"</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-9-水平线标签"><a href="#5-4-9-水平线标签" class="headerlink" title="5.4.9 水平线标签"></a>5.4.9 水平线标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">hr</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-10-加粗标签"><a href="#5-4-10-加粗标签" class="headerlink" title="5.4.10 加粗标签"></a>5.4.10 加粗标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">b</span>></span>加粗<span class="tag"></<span class="name">b</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-11-斜体标签"><a href="#5-4-11-斜体标签" class="headerlink" title="5.4.11 斜体标签"></a>5.4.11 斜体标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">i</span>></span>斜体<span class="tag"></<span class="name">i</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-12-下划线标签"><a href="#5-4-12-下划线标签" class="headerlink" title="5.4.12 下划线标签"></a>5.4.12 下划线标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">u</span>></span>下划线<span class="tag"></<span class="name">u</span>></span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-13-删除标签"><a href="#5-4-13-删除标签" class="headerlink" title="5.4.13 删除标签"></a>5.4.13 删除标签</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><s>删除</s></span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-14特殊符号"><a href="#5-4-14特殊符号" class="headerlink" title="5.4.14特殊符号"></a>5.4.14特殊符号</h3><p><img src="/2019/07/07/前端之HTML/../../%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.assets/%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7.png" alt="特殊符号"></p><h3 id="5-4-15列表标签"><a href="#5-4-15列表标签" class="headerlink" title="5.4.15列表标签"></a>5.4.15列表标签</h3><ol><li><p>无序列表</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"disc"</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">li</span>></span>第一项<span class="tag"></<span class="name">li</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">li</span>></span>第二项<span class="tag"></<span class="name">li</span>></span></span><br><span class="line"><span class="tag"></<span class="name">ul</span>></span></span><br></pre></td></tr></tbody></table></figure><p>type属性：</p><ul><li>disc（实心圆点，默认值）</li><li>circle（空心圆圈）</li><li>square（实心方块）</li><li>none（无样式）</li></ul></li><li><p>有序列表</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"1"</span> <span class="attr">start</span>=<span class="string">"2"</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">li</span>></span>第一项<span class="tag"></<span class="name">li</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">li</span>></span>第二项<span class="tag"></<span class="name">li</span>></span></span><br><span class="line"><span class="tag"></<span class="name">ol</span>></span></span><br></pre></td></tr></tbody></table></figure><p>type属性：</p><ul><li>1 数字列表，默认值</li><li>A 大写字母</li><li>a 小写字母</li><li>Ⅰ大写罗马</li><li>ⅰ小写罗马</li></ul></li><li><p>标题列表</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">dl</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">dt</span>></span>标题1<span class="tag"></<span class="name">dt</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">dd</span>></span>内容1<span class="tag"></<span class="name">dd</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">dt</span>></span>标题2<span class="tag"></<span class="name">dt</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">dd</span>></span>内容1<span class="tag"></<span class="name">dd</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">dd</span>></span>内容2<span class="tag"></<span class="name">dd</span>></span></span><br><span class="line"><span class="tag"></<span class="name">dl</span>></span></span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="6-标签嵌套规则"><a href="#6-标签嵌套规则" class="headerlink" title="6 标签嵌套规则"></a>6 标签嵌套规则</h2><ol><li>行内标签不能嵌套块级标签</li><li>p标签不能嵌套块级标签</li></ol><h2 id="7-form-标签"><a href="#7-form-标签" class="headerlink" title="7 form 标签"></a>7 form 标签</h2><p>form标签可以看做是一个容器。</p><p>表单用于向服务器传输数据，从而实现用户与Web服务器的交互，</p><p>表单能够包含input系列标签，比如文本字段、复选框、单选框、提交按钮等等。</p><p>表单还可以包含textarea、select、fieldset和 label标签。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>accept-charset</td><td>规定在被提交表单中使用的字符集（默认：页面字符集）。</td></tr><tr><td>action</td><td>规定向何处提交表单的地址（URL）（提交页面）。</td></tr><tr><td>autocomplete</td><td>规定浏览器应该自动完成表单（默认：开启）。 自动补全功能！</td></tr><tr><td>enctype</td><td>规定被提交数据的编码（默认：url-encoded）。</td></tr><tr><td>method</td><td>规定在提交表单时所用的 HTTP 方法（默认：GET）。</td></tr><tr><td>name</td><td>规定识别表单的名称（对于 DOM 使用：document.forms.name）。</td></tr><tr><td>novalidate</td><td>规定浏览器不验证表单。</td></tr><tr><td>target</td><td>规定 action 属性中地址的目标（默认：_self）</td></tr></tbody></table><p>form 表单提交数据的几个注意事项：</p><ol><li>可以有多个form标签</li><li>所有获取用户输入的标签都必须放在form表单中</li><li>action=“ ” 控制往哪提交</li><li>input，select，textarea 里面都需要有name属性—-> 用于后端进行获取数据！</li><li>必须要有提交按钮</li><li>put get 区别：</li></ol><h3 id="7-1-input标签"><a href="#7-1-input标签" class="headerlink" title="7.1 input标签"></a>7.1 input标签</h3><p>   <input> 标签用于搜集用户信息。</p><p>根据不同的 type 属性值，输入字段拥有很多种形式。输入字段可以是文本字段、复选框、掩码后的文本控件、单选按钮、按钮等等。</p><table><thead><tr><th>type属性值</th><th>表现形式</th><th>对应代码</th></tr></thead><tbody><tr><td>text</td><td>单行输入文本</td><td><input type=text” /></td></tr><tr><td>password</td><td>密码输入框</td><td><input type="password"></td></tr><tr><td>date</td><td>日期输入框</td><td><input type="date"></td></tr><tr><td>checkbox</td><td>复选框</td><td><input type="checkbox" checked="checked"></td></tr><tr><td>radio</td><td>单选框</td><td><input type="radio"></td></tr><tr><td>submit</td><td>提交按钮</td><td><input type="submit" value="提交"></td></tr><tr><td>reset</td><td>重置按钮</td><td><input type="reset" value="重置"></td></tr><tr><td>button</td><td>普通按钮</td><td><input type="button" value="普通按钮"></td></tr><tr><td>hidden</td><td>隐藏输入框</td><td><input type="hidden"></td></tr><tr><td>file</td><td>文本选择框</td><td><input type="file"></td></tr></tbody></table><p>注：button多用js给绑定事件</p><h3 id="7-2-select-标签"><a href="#7-2-select-标签" class="headerlink" title="7.2 select 标签"></a>7.2 select 标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">select</span> <span class="attr">name</span>=<span class="string">"city"</span> <span class="attr">id</span>=<span class="string">"city"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>></span>北京<span class="tag"></<span class="name">option</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span> <span class="attr">value</span>=<span class="string">"2"</span>></span>上海<span class="tag"></<span class="name">option</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>></span>广州<span class="tag"></<span class="name">option</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>></span>深圳<span class="tag"></<span class="name">option</span>></span></span><br><span class="line">  <span class="tag"></<span class="name">select</span>></span></span><br><span class="line"><span class="tag"></<span class="name">form</span>></span></span><br></pre></td></tr></tbody></table></figure><p>属性说明：</p><ul><li>multiple：布尔属性，设置后为多选，否则默认单选</li><li>disabled：禁用</li><li>selected：默认选中该项</li><li>value：定义提交时的选项值、</li></ul><p>6.2.1 option标签</p><p>option 元素定义下拉列表中的一个选项（一个条目）。</p><p>浏览器将 <option> 标签中的内容作为 </option><select> 标签的菜单或是滚动列表中的一个元素显示。</select></p><p>option 元素位于 select 元素内部。</p><p><strong>注释：</strong><option> 标签可以在不带有任何属性的情况下使用，但是您通常需要使用 value 属性，此属性会指示出被送往服务器的内容。</option></p><p><strong>注释：</strong>请与 select 元素配合使用此标签，否则这个标签是没有意义的。</p><p>6.2.2 optgroup标签</p><optgroup> 标签定义选项组。<p>optgroup 元素用于组合选项。当您使用一个长的选项列表时，对相关的选项进行组合会使处理更加容易。</p><p>必需的属性：label  可选属性：disabled</p><h3 id="7-3-textarea多行文本标签"><a href="#7-3-textarea多行文本标签" class="headerlink" title="7.3 textarea多行文本标签"></a>7.3 textarea多行文本标签</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"memo"</span> <span class="attr">id</span>=<span class="string">"memo"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>></span></span><br><span class="line">  默认内容</span><br><span class="line"><span class="tag"></<span class="name">textarea</span>></span></span><br></pre></td></tr></tbody></table></figure><p>比如：个人简介</p><p>属性说明：</p><ul><li>name：名称</li><li>rows：行数</li><li>cols：列数</li><li>disabled：禁用</li></ul><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p><a href="https://www.cnblogs.com/luotianshuai/p/5159449.html" target="_blank" rel="noopener">https://www.cnblogs.com/luotianshuai/p/5159449.html</a></p><p><a href="https://www.cnblogs.com/liwenzhou/p/7988087.html" target="_blank" rel="noopener">https://www.cnblogs.com/liwenzhou/p/7988087.html</a></p><p><a href="https://www.jianshu.com/p/19cd9400a917" target="_blank" rel="noopener">https://www.jianshu.com/p/19cd9400a917</a></p><p><a href="https://blog.csdn.net/mdxiaohu/article/details/81318643" target="_blank" rel="noopener">https://blog.csdn.net/mdxiaohu/article/details/81318643</a></p><p><a href="http://www.w3school.com.cn/html/index.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/html/index.asp</a></p></optgroup><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-HTML概述&quot;&gt;&lt;a href=&quot;#1-HTML概述&quot; class=&quot;headerlink&quot; title=&quot;1 HTML概述&quot;&gt;&lt;/a&gt;1 HTML概述&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;HTML 指的是超文本标记语言 (&lt;strong&gt;H&lt;/strong&gt;yper 
      
    
    </summary>
    
      <category term="前端" scheme="https://qianlongshenyong.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://qianlongshenyong.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端</title>
    <link href="https://qianlongshenyong.github.io/2019/07/07/%E5%89%8D%E7%AB%AF/"/>
    <id>https://qianlongshenyong.github.io/2019/07/07/前端/</id>
    <published>2019-07-07T08:21:01.000Z</published>
    <updated>2019-07-07T09:21:43.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h1><p>​    编程就是跟数据打交道，我们需要处理数据，存储数据，展示数据。什么是前端，为什么学前端。</p><h1 id="2-web前端概述"><a href="#2-web前端概述" class="headerlink" title="2 web前端概述"></a>2 web前端概述</h1><p>​    web前端开发是从网页制作演变而来。在互联网的演化进程中，网页制作是Web 1.0时代的产物，早期网站主要内容都是静态，以图片和文字为主，用户使用网站的行为也以浏览为主。随着互联网技术的发展和HTML5、CSS3的应用，现代网页更加美观，交互效果显著，功能更加强大。</p><p>​    学习web前端开发基础技术需要掌握：HTML、CSS、JavaScript语言。</p><ol><li>HTML是网页内容的载体。内容就是网页制作者放在页面上想要让用户浏览的信息，可以包含文字、图片、视频等。</li><li>CSS样式是表现。比如标题字体、颜色变化或为标题加入背景图片、边框等。所有这些用来改变内容外观的东西称之为表现。</li><li>JavaScript是用来实现网页上的特效效果。如：鼠标滑过弹出下拉菜单。或鼠标滑过表格的背景颜色改变。还有焦点新闻（新闻图片）的轮换。可以这么理解，有动画的，有交互的一般都是用JavaScript来实现的。</li></ol><p><img src="/2019/07/07/前端/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E4%B8%89%E9%83%A8%E5%88%86.png" alt="前端基础三部分"></p><p><img src="/2019/07/07/前端/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%86%85%E5%AE%B9.png" alt="前端基础内容"></p><h1 id="3-web服务本质"><a href="#3-web服务本质" class="headerlink" title="3 web服务本质"></a>3 web服务本质</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1 前言&quot;&gt;&lt;/a&gt;1 前言&lt;/h1&gt;&lt;p&gt;​    编程就是跟数据打交道，我们需要处理数据，存储数据，展示数据。什么是前端，为什么学前端。&lt;/p&gt;
&lt;h1 id=&quot;2
      
    
    </summary>
    
      <category term="前端" scheme="https://qianlongshenyong.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://qianlongshenyong.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>搭建自己的博客</title>
    <link href="https://qianlongshenyong.github.io/2019/06/23/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://qianlongshenyong.github.io/2019/06/23/搭建自己的博客/</id>
    <published>2019-06-22T16:00:00.000Z</published>
    <updated>2019-06-29T07:06:58.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>技术：Hexo+github</p><p>好处：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li></ol><p>准备工作：</p><ul><li>有一个github账号，没有的话去注册一个；</li><li>安装了node.js、npm，并了解相关基础知识；</li><li>安装了git for windows（或者其它git客户端）</li></ul><h1 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><ol><li><p>登录github账号后新创建一格式为：<code>你的用户名.github.io</code> </p><p>比如说，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/" target="_blank" rel="noopener">http://test.github.io</a> 了</p></li><li><p>点击Settings设置，然后往下拉，找到<code>github pages</code>，点击<code>choose a theme</code>选择喜欢主题</p></li><li><p>在浏览器输入 <code>用户名.github.io</code>访问自己博客</p></li></ol><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><a id="more"></a><h1 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h1><h2 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h2><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p><p>官网： <a href="http://hexo.io/" target="_blank" rel="noopener">http://hexo.io</a><br>github: <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">https://github.com/hexojs/hexo</a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>​        由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo g # 生成hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的</span><br><span class="line">hexo s # 开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容</span><br><span class="line">hexo clean #清理public的内容，然后再来重新生成和发布</span><br><span class="line">hexo d # 上传</span><br><span class="line">hexo new "postName" #新建文章</span><br><span class="line">hexo new page "pageName" #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br><span class="line">缩写：</span><br><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br><span class="line">组合命令：</span><br><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></tbody></table></figure><p>注：</p><ul><li>执行hexo d 命令之前，可能需要安装 npm install hexo-deployer-git –save</li><li>在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</li></ul><h2 id="hexo环境搭建："><a href="#hexo环境搭建：" class="headerlink" title="hexo环境搭建："></a>hexo环境搭建：</h2><ol><li><p>安装git</p></li><li><p>安装<a href="http://nodejs.org/" target="_blank" rel="noopener">nodejs</a></p></li><li><p>创建存放hexo组件的目录，然后<code>Git bash here</code></p></li><li><p>安装hexo <code>npm install hexo -g</code></p></li><li><p><code>hexo -v</code>，检查hexo是否安装成功</p></li><li><p>初始化文件夹 <code>hexo init</code></p><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</p><p><img src="/2019/06/23/搭建自己的博客/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="目录结构"></p></li><li><p><code>npm install</code> 安装所需要的组件</p></li><li><p>将Hexo于Github page 联系起来，设置Git的user name 和email</p><p><code>git config --global user.name "qianlongshenyong"</code></p><p><code>git config --global user.email"1320005085@qq.com"</code></p></li><li><p>修改 <code>D:\blog\_config.yml</code> 并保存</p></li></ol><p><img src="/2019/06/23/搭建自己的博客/%E4%BF%AE%E6%94%B9.jpg" alt="修改"></p><ol start="10"><li><code>hexo s</code> 启动服务，在本地4000端口开启服务</li><li>在浏览器输入127.0.0.1:4000访问博客主页</li></ol><h1 id="使用Hexo修改博客主题"><a href="#使用Hexo修改博客主题" class="headerlink" title="使用Hexo修改博客主题"></a>使用Hexo修改博客主题</h1><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol><li><p>选择博客主题<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p></li><li><p>选择tomotoes主题</p></li><li><p>复制主题链接，</p></li><li><p><code>D:\blog\themes</code>,右键选择git bash here</p></li><li><p>下载所选主题<code>git clone https://github.com/Tomotoes/hexo-theme-tomotoes.git</code></p></li><li><p>修改主题名称为tomotoes</p></li><li><p>修改 <code>D:\blog\_config.yml</code> 中theme并保存</p><p><img src="/2019/06/23/搭建自己的博客/%E4%BF%AE%E6%94%B9theme.png" alt="修改theme"></p></li><li><p>然后在==blog目录==下打开git输入<code>hexo s</code>，本地预览效果.</p></li></ol><h2 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h2><p>按照<code>https://github.com/Tomotoes/hexo-theme-tomotoes.git</code>有部署文档</p><h3 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h3><p>还是在 Hexo 根目录，如果以下插件已安装过，无需再次安装。</p><h4 id="Less"><a href="#Less" class="headerlink" title="Less"></a>Less</h4><p>主题默认使用 less 作为 css 预处理工具。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-less --save</span><br></pre></td></tr></tbody></table></figure><h4 id="Feed"><a href="#Feed" class="headerlink" title="Feed"></a>Feed</h4><p>用于生成 rss。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></tbody></table></figure><h4 id="Json-content"><a href="#Json-content" class="headerlink" title="Json-content"></a>Json-content</h4><p>用于生成静态站点数据，用作站内搜索的数据源。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-json-content --save</span><br></pre></td></tr></tbody></table></figure><h4 id="QRCode"><a href="#QRCode" class="headerlink" title="QRCode"></a>QRCode</h4><p>用于生成微信分享二维码。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-helper-qrcode --save</span><br></pre></td></tr></tbody></table></figure><h4 id="hexo-wordcount"><a href="#hexo-wordcount" class="headerlink" title="hexo-wordcount"></a>hexo-wordcount</h4><p>用来显示文章更多信息，比如：字数，阅读时间</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></tbody></table></figure><h4 id="hexo-abbrlink"><a href="#hexo-abbrlink" class="headerlink" title="hexo-abbrlink"></a>hexo-abbrlink</h4><p><strong>文章唯一链接，有利于SEO，主题脚本也对其有依赖</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></tbody></table></figure><h4 id="hexo-filter-github-emojis"><a href="#hexo-filter-github-emojis" class="headerlink" title="hexo-filter-github-emojis"></a>hexo-filter-github-emojis</h4><p>Emoji插件，让文章更生动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></tbody></table></figure><p>安装完成后再次运行<code>hexo s</code></p><h2 id="开启页面"><a href="#开启页面" class="headerlink" title="开启页面"></a>开启页面</h2><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></tbody></table></figure><p>修改 hexo/source/tags/index.md 的元数据</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: tags</span><br><span class="line">comments: false</span><br></pre></td></tr></tbody></table></figure><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></tbody></table></figure><p>修改 hexo/source/categories/index.md 的元数据</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: categories</span><br><span class="line">comments: false</span><br></pre></td></tr></tbody></table></figure><h3 id="关于页"><a href="#关于页" class="headerlink" title="关于页"></a>关于页</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></tbody></table></figure><p>修改 hexo/source/about/index.md 的元数据</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: about</span><br><span class="line">comments: true</span><br><span class="line">reward: false</span><br></pre></td></tr></tbody></table></figure><h2 id="根据需求修改主题的配置"><a href="#根据需求修改主题的配置" class="headerlink" title="根据需求修改主题的配置"></a>根据需求修改主题的配置</h2><ol><li><p>修改 `D:\blog_config.yml</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: </span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">author: peter</span><br><span class="line">emial: 1320005085@qq.com</span><br><span class="line">url:</span><br></pre></td></tr></tbody></table></figure></li><li><p>保存预览</p></li><li><p><code>npm install –save hexo-deployer-git</code></p></li><li><p><code>hexo d –g</code></p></li></ol><h1 id="关于-config-yml"><a href="#关于-config-yml" class="headerlink" title="关于_config.yml"></a>关于_config.yml</h1><h2 id="hexo的-config-yml"><a href="#hexo的-config-yml" class="headerlink" title="hexo的_config.yml"></a>hexo的_config.yml</h2><p>站点配置文件，也就是站点根目录下的_config.yml配置文件</p><h2 id="主题的-config-yml"><a href="#主题的-config-yml" class="headerlink" title="主题的_config.yml"></a>主题的_config.yml</h2><p>主题配置文件，位于theme文件夹中对应主题的文件夹下的_config.yml。</p><h3 id="设置主页的Menu"><a href="#设置主页的Menu" class="headerlink" title="设置主页的Menu"></a>设置主页的Menu</h3><p>设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，它将用于匹配图标以及翻译。</p><p>菜单示例配置</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  #about: /about</span><br><span class="line">  #categories: /categories</span><br><span class="line">  tags: /tags</span><br><span class="line">  #commonweal: /404.html</span><br></pre></td></tr></tbody></table></figure><p>参考：<a href="https://blog.csdn.net/tonydandelion2014/article/details/61615898" target="_blank" rel="noopener">https://blog.csdn.net/tonydandelion2014/article/details/61615898</a></p><h1 id="hexo写博客"><a href="#hexo写博客" class="headerlink" title="hexo写博客"></a>hexo写博客</h1><p>配置完之后，有两种方法写博客。</p><h2 id="方法1-通过hexo命令"><a href="#方法1-通过hexo命令" class="headerlink" title="方法1 通过hexo命令"></a>方法1 通过hexo命令</h2><p>定位到blog目录下，执行<code>hexo new 'my-first-blog'</code>hexo会帮我们在<code>_posts</code>下生成相关md文件,我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p><p><img src="/2019/06/23/搭建自己的博客/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E7%9A%84%E6%A0%BC%E5%BC%8F.png" alt="自动生成的格式"></p><h2 id="方法2-自己创建md文件"><a href="#方法2-自己创建md文件" class="headerlink" title="方法2 自己创建md文件"></a>方法2 自己创建md文件</h2><p>通过typora等md编辑器自己创建md文件，但是必须符合以下开头。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">注:冒号后面必须要有空格 这是yaml语法的规定</span><br></pre></td></tr></tbody></table></figure><p><img src="/2019/06/23/搭建自己的博客/%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8.jpg" alt="参数列表"></p><p>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><p><code>hexo new page 'postName'</code>命令和<code>hexo new 'postName'</code>有什么区别呢</p><p>最终部署时生成：<code>hexo\public\my-second-blog\index.html</code>，但是它不会作为文章出现在博文目录。</p><h1 id="如何让博文列表不显示全部内容"><a href="#如何让博文列表不显示全部内容" class="headerlink" title="如何让博文列表不显示全部内容"></a>如何让博文列表不显示全部内容</h1><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p><p>答案是在合适的位置加上<code><!--more--></code>即可，例如：</p><h1 id="图片设置问题"><a href="#图片设置问题" class="headerlink" title="图片设置问题"></a>图片设置问题</h1><p>解决方式是使用<strong>CodeFalling/hexo-asset-image插件</strong>。</p><h4 id="1-post-asset-folder"><a href="#1-post-asset-folder" class="headerlink" title="1. post_asset_folder"></a>1. post_asset_folder</h4><p>首先确认<strong>_config.yml</strong>中有<strong>post_asset_folder:true</strong>。</p><p>Hexo提供了一种更方便管理Asset的设定：<strong>post_asset_folder</strong><br> 当您设置<strong>post_asset_folder</strong>为<strong>true</strong>参数后，在建立文件时，Hexo<br> 会自动建立一个与文章同名的文件夹；以前的文章也可以自己手动创建同名文件夹。</p><h4 id="2-安装-hexo-asset-image"><a href="#2-安装-hexo-asset-image" class="headerlink" title="2. 安装 hexo-asset-image"></a>2. 安装 hexo-asset-image</h4><p>在hexo的目录下执行</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></tbody></table></figure><h4 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h4><p>完成安装后用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面。结构如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">本地图片测试</span><br><span class="line">├── logo.jpg</span><br><span class="line">本地图片测试.md</span><br></pre></td></tr></tbody></table></figure><p>这样的目录结构（目录名和文章名一致），只要使用</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](本地图片测试/logo.jpg)</span><br></pre></td></tr></tbody></table></figure><p>就可以插入图片。其中[]里面不写文字则没有图片标题。<br> 生成的结构为</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public/2016/3/9/本地图片测试</span><br><span class="line">                ├── index.html</span><br><span class="line">                ├── logo.jpg</span><br></pre></td></tr></tbody></table></figure><p>同时，生成的 html 是</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](/2016/3/9/本地图片测试/logo.jpg)</span><br></pre></td></tr></tbody></table></figure><p>而不是愚蠢的</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](本地图片测试/logo.jpg)</span><br></pre></td></tr></tbody></table></figure><p>个人喜欢typora编辑器，在偏好设置中将图片插入设置为如下：然后只需将后缀.assets删除，即可与hexo文件夹名称相同。</p><p><img src="/2019/06/23/搭建自己的博客/%E5%9B%BE%E7%89%87%E4%BF%9D%E5%AD%98%E6%A0%BC%E5%BC%8F.png" alt="图片保存格式"></p><h1 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h1><ol><li><p>输入hexo d –g 提示找不到git </p><p>解决办法：<code>npm install –save hexo-deployer-git</code></p></li><li><p>点击主页或者归档显示找不到页面</p><p>解决办法：主题设置中有关于开启页面的指令</p></li><li><p>图片显示不出来问题</p><p>解决办法：采用CodeFalling/hexo-asset-image</p></li></ol><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><ol><li><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#hexo%E7%AE%80%E4%BB%8B" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#hexo%E7%AE%80%E4%BB%8B</a></li><li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">https://blog.csdn.net/sinat_37781304/article/details/82729029</a></li><li><a href="https://foxgrin.github.io/posts/29757/" target="_blank" rel="noopener">https://foxgrin.github.io/posts/29757/</a></li><li><a href="https://blog.annieyu.com/posts/3333782006.html" target="_blank" rel="noopener">https://blog.annieyu.com/posts/3333782006.html</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      通过hexo+github搭建属于自己的博客
    
    </summary>
    
      <category term="工具" scheme="https://qianlongshenyong.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Hexo" scheme="https://qianlongshenyong.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
